name: Pipeline
on:
  push:
    branches: ["main"]
env:
  REGISTRY: ghcr.io
  PREFIX: smell-ya-later/IOT_WaterSensor
jobs:
  build:
    name: "üõ†Ô∏è Build"
    runs-on: ubuntu-latest
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout üõí
        uses: actions/checkout@v2
      - name: Cache Docker layers üç∞
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Container Registry üì¶
        uses: Azure/docker-login@v1
        with:
          login-server: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx üö¢
        uses: docker/setup-buildx-action@v1
        with:
          buildkitd-flags: --debug

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{env.REGISTRY}}/${{env.PREFIX}}
          tags: |
            type=sha

      - name: Build and Push üõ†Ô∏è‚û°Ô∏èüöÄ
        uses: docker/build-push-action@v2
        with:
          context: IOT_WateringSensor/
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: IOT_WateringSensor/Dockerfile
          cache-from: type=gha #caching
          cache-to: type=gha #caching
  deployment:
    name: "üöÄ Deploy"
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Checkout üõí
        uses: actions/checkout@v2

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v2.0

      - name: Set kubeconfig
        uses: Azure/k8s-set-context@v2
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: Set imagePullSecret
        uses: azure/k8s-create-secret@v4
        with:
          secret-name: "iotcred"
          container-registry-url: "ghcr.io"
          container-registry-username: ${{ github.repository_owner }}
          container-registry-password: ${{ secrets.GITHUB_TOKEN }}
        id: create-secret

      - name: Add Database Secrets
        uses: azure/k8s-create-secret@v4
        with:
          secret-name: "mssql-secret"
          secret-type: "generic"
          data: ${{ secrets.MSSQL_SECRET }}
        id: create-db-secret

      - name: Add HiveMQ Helm Repository
        uses: WyriHaximus/github-action-helm3@v2.0
        with:
          exec: helm repo add hivemq https://hivemq.github.io/helm-charts
          kubeconfig: "${{ secrets.KUBECONFIG }}"

      - name: Install HiveMQ Helm Chart
        uses: WyriHaximus/github-action-helm3@v2.0
        with:
          exec: helm upgrade --install -f k8/hive/hivemq-values.yml hivemq hivemq/hivemq-operator
          kubeconfig: "${{ secrets.KUBECONFIG }}"

      - name: Deploy manifests
        uses: Azure/k8s-deploy@v3.1
        with:
          action: deploy
          manifests: |
            k8/db/mssql-config.yml
            k8/db/mssql-deployment.yml
            k8/db/mssql-service.yml
            k8/db/mssql-ingress.yml
            k8/web/iotweb-deployment.yml
            k8/web/iotweb-service.yml
            k8/web/iotweb-ingress.yml
            k8/hive/mqtt-ingress.yml

          images: ${{ needs.build.outputs.tags }}
          imagepullsecrets: |
            iotcred
