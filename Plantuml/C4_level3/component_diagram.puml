@startuml component_diagram

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
left footer C4 - Component Diagram - IOT Plant Monitoring System
skinparam groupInheritance 1
skinparam linetype polyline

Container(UserPanel, "User Panel", "Container: C#, ASP.NET Blazor", "Frontend for Users")

Container(Device, "Device", "Container: C# Emulation", "IoT Device")

Container(HiveMQ, "HiveMQ", "Container: HiveMQ", "MQTT Broker")
ContainerDb(db, "Database", "Container: MSSQL", "Stores user info and plant data")

Container_Boundary(system, "Plant Monitoring System") {
    Component(FrontPage, "Front Page", "Blazor Component", "Front page for users")
    Component(StatsPage, "Plant Stats Page", "Blazor Component", "Plant page for users")
    Component(BindingPage, "Plant Binding Page", "Blazor Component", "Binding page for users")
    Component(dbRepository, "Database Repository", "C# Class", "Handles database queries, generated by EF Core")
    Component(mqttHandler, "MQTTHandler", "Background Service", "Handles MQTT messages")
}

Rel(UserPanel, FrontPage, "Views Front Page")
Rel(UserPanel, StatsPage, "Views Plant Stats")
Rel(UserPanel, BindingPage, "Views Plant Binding")

Rel(StatsPage, dbRepository, "Reads from")
Rel(BindingPage, dbRepository, "Reads from")
Rel(mqttHandler, dbRepository, "Writes to")

Rel(dbRepository, db, "Reads from and writes to")

Rel(Device, HiveMQ, "Publishes to")
Rel_U(mqttHandler, HiveMQ, "Subscribes to")

@enduml