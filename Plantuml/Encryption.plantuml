@startuml Encryption_Diagram

footer TLS Certificate Management
scale max 1024 width

skinparam nodesep 10
skinparam ranksep 10


' Azure

!define AzurePuml https://raw.githubusercontent.com/RicardoNiepel/Azure-PlantUML/release/2-1/dist

!includeurl AzurePuml/AzureCommon.puml
!includeurl AzurePuml/AzureSimplified.puml
!includeurl AzurePuml/Containers/AzureContainerRegistry.puml

' Kubernetes
!define KubernetesPuml https://raw.githubusercontent.com/dcasati/kubernetes-PlantUML/master/dist

!includeurl KubernetesPuml/kubernetes_Common.puml
!includeurl KubernetesPuml/kubernetes_Context.puml
!includeurl KubernetesPuml/kubernetes_Simplified.puml

!includeurl KubernetesPuml/OSS/KubernetesSvc.puml
!includeurl KubernetesPuml/OSS/KubernetesIng.puml
!includeurl KubernetesPuml/OSS/KubernetesPod.puml
!includeurl KubernetesPuml/OSS/KubernetesRs.puml
!includeurl KubernetesPuml/OSS/KubernetesDeploy.puml
!includeurl KubernetesPuml/OSS/KubernetesHpa.puml

' actor "Device" as device
left to right direction
AzureContainerRegistry(acr, "LetsEncrypt Certificate Authority", "Canada Central")
' Kubernetes Components
Cluster_Boundary(cluster, "IOTProject Kubernetes Cluster") {
    Namespace_Boundary(nsprod, "Production") {
        ' KubernetesIng(ingIngest, "iotingest.heldgaard.dev", "")
        KubernetesIng(ingWeb, "iotweb.[...].dev", "")
        KubernetesIng(ingIngest, "iotingest.[...].dev", "")
    }
    Namespace_Boundary(nscm, "cert-manager") {
        KubernetesDeploy(deployCertManager, "cert-manager", " ")
        KubernetesRs(rsCaInjector, "cainjector ReplicaSet", " ")
        KubernetesRs(rsCertManager, "certmanager ReplicaSet", " ")
        KubernetesPod(podCaInjector, "cainjector", "")
        KubernetesPod(podCertManager, "certmanager", "")

    }
}


Rel(deployCertManager, rsCaInjector, " ")
Rel(deployCertManager, rsCertManager, " ")
Rel(rsCaInjector, podCaInjector, " ")
Rel(rsCertManager, podCertManager, " ")
Rel_R(podCertManager, podCaInjector, "Pass Certificates")
Rel(podCertManager, acr, "Acquire Certificates")

Rel(podCaInjector, ingWeb, "Inject Certificate")
Rel(podCaInjector, ingIngest, "Inject Certificate")





@enduml